{"version":3,"sources":["./src/app/form-builder-v2/widgets/question-type-controls/audio-control-widget/audio-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/phone-control-widget/phone-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/image-control-widget/image-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/tree-option-control-widget/tree-option-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/signature-control-widget/signature-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/date-control-widget/date-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/introductory-text-control-widget/introductory-text-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/signature-control-widget/signature-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/default-control-widget/default-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/question-type-controls-base.ts","./src/app/form-builder-v2/model-messenger.service.ts","./src/app/form-builder-v2/widgets/form-builder-widget/form-builder-widget.component.css","./src/app/form-builder-v2/widgets/page-control-widget/page-control-widget.component.html","./src/app/form-builder-v2/widgets/page-question-builder-viewer/page-question-builder-viewer.component.ts","./src/app/form-builder-v2/widgets/page-question-builder/page-question-builder.component.html","./src/app/form-builder-v2/widgets/question-type-controls/image-control-widget/image-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/phone-control-widget/phone-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/tree-option-control-widget/tree-option-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/number-control-widget/number-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/date-control-widget/date-control-widget.component.css","./src/app/app.component.css","./src/app/form-builder-v2/widgets/question-type-controls/calculation-control-widget/calculation-control-widget.component.css","./src/environments/environment.ts","./src/app/form-builder-v2/widgets/question-type-controls/question-type-advance-widget/question-type-advance-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/text-control-widget/text-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/default-control-widget/default-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/gps-control-widget/gps-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/fingerprint-control-widget/fingerprint-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/audio-control-widget/audio-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/number-control-widget/number-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/email-control-widget/email-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/video-control-widget/video-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/email-control-widget/email-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/image-control-widget/image-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/multiple-choice-control-widget/multiple-choice-control-widget.component.ts","./src/app/form-builder-v2/widgets/page-question-builder-viewer/page-question-builder-viewer.component.css","./src/app/form-builder-v2/widgets/question-type-controls/text-control-widget/text-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/page-summery-control-widget/page-summery-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/qr-code-control-widget/qr-code-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/fingerprint-control-widget/fingerprint-control-widget.component.html","./src/app/form-builder-v2/widgets/page-builder-widget/page-builder-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/number-control-widget/number-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/question-widget-advance/question-skip-logic-widget/question-skip-logic-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/gis-control-widget/gis-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/email-control-widget/email-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/gis-control-widget/gis-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/qr-code-control-widget/qr-code-control-widget.component.css","./src/app/form-builder-v2/widgets/form-builder-widget/form-builder-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/introductory-text-control-widget/introductory-text-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/bar-code-control-widget/bar-code-control-widget.component.ts","./src/app/app.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/phone-control-widget/phone-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/multiple-choice-control-widget/multiple-choice-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/bar-code-control-widget/bar-code-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/signature-control-widget/signature-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/page-summery-control-widget/page-summery-control-widget.component.html","./src/app/app.component.html","./src/app/form-builder-v2/widgets/page-question-builder/page-question-builder.component.css","./src/app/form-builder-v2/widgets/question-type-controls/video-control-widget/video-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/calculation-control-widget/calculation-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/date-control-widget/date-control-widget.component.ts","./src/app/form-builder-v2/widgets/page-builder-widget/page-builder-widget.component.css","./src/app/app.module.ts","./src/app/form-builder-v2/widgets/question-type-controls/introductory-text-control-widget/introductory-text-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/video-control-widget/video-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/question-type-advance-widget/question-type-advance-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/question-widget-advance/question-skip-logic-widget/question-skip-logic-widget.component.ts","./src/app/form-builder-v2/widgets/page-question-builder-viewer/page-question-builder-viewer.component.html","./src/app/form-builder-v2/widgets/question-type-controls/gis-control-widget/gis-control-widget.component.css","./src/app/form-builder-v2/widgets/page-question-builder/page-question-builder.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/multiple-choice-control-widget/multiple-choice-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/audio-control-widget/audio-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/gps-control-widget/gps-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/tree-option-control-widget/tree-option-control-widget.component.html","./src/app/form-builder-v2/widgets/page-builder-widget/page-builder-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/qr-code-control-widget/qr-code-control-widget.component.ts","./src/app/form-builder-v2/widgets/page-control-widget/page-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/calculation-control-widget/calculation-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/page-summery-control-widget/page-summery-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/default-control-widget/default-control-widget.component.ts","./src/app/form-builder-v2/widgets/question-type-controls/text-control-widget/text-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/question-widget-advance/question-skip-logic-widget/question-skip-logic-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/gps-control-widget/gps-control-widget.component.html","./src/app/form-builder-v2/widgets/form-builder-widget/form-builder-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/fingerprint-control-widget/fingerprint-control-widget.component.css","./src/app/form-builder-v2/widgets/question-type-controls/bar-code-control-widget/bar-code-control-widget.component.html","./src/app/form-builder-v2/widgets/question-type-controls/question-type-advance-widget/question-type-advance-widget.component.ts","./src/app/app-routing.module.ts","./src/app/form-builder-v2/widgets/page-control-widget/page-control-widget.component.ts","./src/app/form-builder-v2/models.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-audio-control-widget',\n  templateUrl: './audio-control-widget.component.html',\n  styleUrls: ['./audio-control-widget.component.css'],\n})\nexport class AudioControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('audio', messenger);\n  }\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { StringHelpers } from 'src/app/form-builder-v2/models';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-phone-control-widget',\n  templateUrl: './phone-control-widget.component.html',\n  styleUrls: ['./phone-control-widget.component.css'],\n})\nexport class PhoneControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('phone', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvaW1hZ2UtY29udHJvbC13aWRnZXQvaW1hZ2UtY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-tree-option-control-widget',\n  templateUrl: './tree-option-control-widget.component.html',\n  styleUrls: ['./tree-option-control-widget.component.css'],\n})\nexport class TreeOptionControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('option-tree', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-signature-control-widget',\n  templateUrl: './signature-control-widget.component.html',\n  styleUrls: ['./signature-control-widget.component.css'],\n})\nexport class SignatureControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('signature', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvc2lnbmF0dXJlLWNvbnRyb2wtd2lkZ2V0L3NpZ25hdHVyZS1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"questionWidget\\\" [formGroup]=\\\"questionControlFormGroup\\\">\\n  <div\\n    tabindex=\\\"0\\\"\\n    data-react-beautiful-dnd-drag-handle=\\\"0\\\"\\n    aria-roledescription=\\\"Draggable item. Press space bar to lift\\\"\\n    draggable=\\\"false\\\"\\n    style=\\\"border-radius: 2px; height: 30px\\\"\\n  ></div>\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px\\\">\\n            <img\\n              src=\\\"assets/icons/question-mark-orange.0e048007.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />&nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\"></span\\n            >&nbsp;<img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div style=\\\"padding: 20px\\\">\\n          <span class=\\\"pointer\\\" style=\\\"font-size: 18px; color: rgb(82, 80, 80)\\\"\\n            ><span>Select a response type</span></span\\n          >\\n          <div class=\\\"faint-text text-muted\\\">\\n            <span>What kind of response do you expect for this question?</span>\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n            <div\\n              class=\\\"col-md-6\\\"\\n              *ngFor=\\\"let questionType of qustionTypes\\\"\\n              (click)=\\\"onSelectedQuestionType(questionType)\\\"\\n            >\\n              <div class=\\\"question-type\\\">\\n                <i\\n                  class=\\\"material-icons orange600 md-24 form-builder-quetion-type-icons\\\"\\n                  >{{ questionType.icon2 }}</i\\n                >\\n\\n                <span class=\\\"qustion-type-svg\\\"\\n                  ><span>{{ questionType.name }}</span></span\\n                >\\n                <div class=\\\"clearfix\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              class=\\\"float-right pointer\\\"\\n              style=\\\"font-size: 14px; color: rgb(26, 100, 240)\\\"\\n              ><span>Cancel</span></span\\n            >\\n            <div class=\\\"clearfix\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { ModelMessengerService } from './../../model-messenger.service';\r\nimport { EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  QuestionBuilderMessengerModel,\r\n  QuestionType,\r\n  StringHelpers,\r\n} from './../../models';\r\nexport class QuestionTypeControlBase {\r\n  protected qustionTypes: QuestionType[];\r\n  protected selectedQuetionType: QuestionType;\r\n  protected isCollapsed: boolean;\r\n  protected isAdvanceOptionOpened: boolean;\r\n  @Input() questionControlFormGroup: FormGroup;\r\n  @Input() questionIndex: number;\r\n  @Output() questionControlFormGroupChange = new EventEmitter();\r\n  constructor(\r\n    public controlType: string,\r\n    public messenger: ModelMessengerService\r\n  ) {\r\n    this.qustionTypes = StringHelpers.QustionTypes;\r\n    this.selectedQuetionType = StringHelpers.GetQuestionType(this.controlType);\r\n    this.messenger.activeQuestionType.subscribe((questionId) => {\r\n      // console.log('questionId:', questionId);\r\n      // console.log('questionControlFormGroup:', this.questionControlFormGroup);\r\n      if (this.questionControlFormGroup && questionId) {\r\n        this.isCollapsed =\r\n          this.questionControlFormGroup.value.questionId !== questionId;\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeCollapseState(fireMessage = true): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n\r\n    if (fireMessage) {\r\n      this.messenger.onActiveQuestionTypeChanged(\r\n        this.questionControlFormGroup.value.questionId\r\n      );\r\n      // console.log(this.questionControlFormGroup.value.questionId);\r\n    }\r\n  }\r\n\r\n  onRemoveQuesion(): void {\r\n    const model: QuestionBuilderMessengerModel = {\r\n      action: StringHelpers.QUESTION_BUILDER_DELETE,\r\n      fromGroup: this.questionControlFormGroup,\r\n      formGroupIndex: this.questionIndex,\r\n    };\r\n\r\n    this.messenger.onQuestionBuilderChanged(model);\r\n    // console.log(model);\r\n  }\r\n\r\n  onOpenAdvanceOption(): void {\r\n    this.isAdvanceOptionOpened = !this.isAdvanceOptionOpened;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { QuestionBuilderMessengerModel } from './models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModelMessengerService {\n  private questionBuilderBehavior = new BehaviorSubject({});\n  questionBuilder = this.questionBuilderBehavior.asObservable();\n\n  private activeQuestionTypeBehavior = new BehaviorSubject('');\n  activeQuestionType = this.activeQuestionTypeBehavior.asObservable();\n\n  constructor() {}\n  onQuestionBuilderChanged(model: QuestionBuilderMessengerModel): void {\n    this.questionBuilderBehavior.next(model);\n  }\n\n  onActiveQuestionTypeChanged(questionId: string): void {\n    this.activeQuestionTypeBehavior.next(questionId);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL2Zvcm0tYnVpbGRlci13aWRnZXQvZm9ybS1idWlsZGVyLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<!-- <div>\\n  <div style=\\\"margin-top: 10px\\\">\\n    <div class=\\\"container-fluid q_page__mobile\\\">\\n      <div class=\\\"row flex-column-reverse flex-md-row\\\">\\n        <div\\n          class=\\\"col-md-12 col-lg-8 col-xl-9 back-white\\\"\\n          style=\\\"padding-bottom: 3rem\\\"\\n        >\\n          <div class=\\\"questions-content\\\" *ngIf=\\\"pages\\\">\\n            <div>\\n              <div class=\\\"qBuilderPages_Wrapper\\\">\\n                <div class=\\\"qBuilderPages\\\">\\n                  <div class=\\\"customSelect ant-select ant-select-enabled\\\">\\n                    <select\\n                      [ngModel]=\\\"selectedPageObject.pageId\\\"\\n                      (change)=\\\"onPageChange($event.target.value)\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                    >\\n                      <option\\n                        [ngValue]=\\\"page.pageId\\\"\\n                        *ngFor=\\\"let page of pages.value\\\"\\n                      >\\n                        {{ page.name }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div style=\\\"position: relative\\\">\\n                    <div class=\\\"btn-group\\\">\\n                      <button\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-default dropdown-toggle\\\"\\n                        data-toggle=\\\"dropdown\\\"\\n                        aria-haspopup=\\\"true\\\"\\n                        aria-expanded=\\\"false\\\"\\n                      >\\n                        More actions\\n                      </button>\\n                      <div class=\\\"dropdown-menu\\\">\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Edit page title</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Delete page</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Reorder pages</a>\\n                        <div class=\\\"dropdown-divider\\\"></div>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Move questions</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Delete questions</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Insert Sub Form</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Embed Sub Form</a>\\n                      </div>\\n                    </div>\\n                    <button\\n                      (click)=\\\"onAddNewPage()\\\"\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-link\\\"\\n                    >\\n                      <span class=\\\"add-page\\\">+ <span>New Page</span> </span>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div style=\\\"padding-top: 55px\\\">\\n                <div class=\\\"q-page-content\\\" style=\\\"margin-top: 20px\\\">\\n                  <div style=\\\"position: relative\\\">\\n                    <form [formGroup]=\\\"selectedPage\\\">\\n                      <div formArrayName=\\\"questions\\\">\\n                        <div\\n                          *ngFor=\\\"\\n                            let question of getSelectedPageQuestions().controls;\\n                            let questionIndex = index\\n                          \\\"\\n                          [formGroupName]=\\\"questionIndex\\\"\\n                        >\\n                          <div class=\\\"mb-3\\\">\\n                            <div\\n                              class=\\\"questionWidget\\\"\\n                              *ngIf=\\\"showSelectedQuestionViewer(question)\\\"\\n                            >\\n                              <div\\n                                tabindex=\\\"0\\\"\\n                                data-react-beautiful-dnd-drag-handle=\\\"0\\\"\\n                                aria-roledescription=\\\"Draggable item. Press space bar to lift\\\"\\n                                draggable=\\\"false\\\"\\n                                class=\\\"questionWidget__handle\\\"\\n                              >\\n                                <div class=\\\"questionWidget__handleNumber\\\">\\n                                  {{ question.value.index }}\\n                                </div>\\n                              </div>\\n                              <div\\n                                class=\\\"survey-content questionWidget__collapse\\\"\\n                              >\\n                                <div>\\n                                  <img\\n                                    class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n                                    src=\\\"assets/icons/ellipsis.svg\\\"\\n                                    style=\\\"\\n                                      transform: rotate(90deg);\\n                                      cursor: pointer;\\n                                    \\\"\\n                                    alt=\\\"ico\\\"\\n                                  />\\n                                </div>\\n                                <div\\n                                  class=\\\"questionWidget__collapseInner\\\"\\n                                  (click)=\\\"onChangeCollapseState()\\\"\\n                                  style=\\\"cursor: pointer\\\"\\n                                >\\n                                  <div class=\\\"question-title\\\">\\n                                    <div\\n                                      class=\\\"text-truncate\\\"\\n                                      style=\\\"font-size: 14px\\\"\\n                                    >\\n                                      {{\\n                                        question.value.title\\n                                          ? question.value.title\\n                                          : \\\"--Provide Question--\\\"\\n                                      }}\\n                                    </div>\\n                                  </div>\\n                                  <div style=\\\"cursor: pointer\\\">\\n                                    <i\\n                                      class=\\\"material-icons orange600 md-24\\\"\\n                                      style=\\\"margin-right: 16px\\\"\\n                                      >{{\\n                                        getQuestionTypeObject(\\n                                          question.value.type\\n                                        ).icon2\\n                                      }}</i\\n                                    >\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n\\n                            <app-page-question-type-widget\\n                              [questionControlFormGroup]=\\\"question\\\"\\n                              [questionIndex]=\\\"questionIndex\\\"\\n                            ></app-page-question-type-widget>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </form>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"no-page-questions\\\"\\n                    *ngIf=\\\"!getSelectedPageQuestions().length\\\"\\n                  >\\n                    <div class=\\\"no-page-questions__Container\\\">\\n                      <svg\\n                        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n                        width=\\\"100%\\\"\\n                        height=\\\"100%\\\"\\n                        viewBox=\\\"0 0 130.5 130.5\\\"\\n                      >\\n                        <g transform=\\\"translate(-612.75 -301.75)\\\">\\n                          <circle\\n                            class=\\\"a\\\"\\n                            cx=\\\"65.25\\\"\\n                            cy=\\\"65.25\\\"\\n                            r=\\\"65.25\\\"\\n                            transform=\\\"translate(612.75 301.75)\\\"\\n                            fill=\\\"#c6ccd4\\\"\\n                          ></circle>\\n                          <g transform=\\\"translate(640.714 325.364)\\\">\\n                            <path\\n                              class=\\\"b\\\"\\n                              fill=\\\"#fff\\\"\\n                              d=\\\"M98.28,11.99q19.342-.031,38.685-.007c.411-.036.613.4.888.628q11.775,11.765,23.54,23.544.018,29.525.005,59.052-31.56.013-63.119.007c.012-13.158-.008-26.314.008-39.472,1.2,2.84,2.325,5.71,3.516,8.555a1.686,1.686,0,0,1,.16.676c.015,8.849-.012,17.7.012,26.548q27.872.005,55.74,0,0-27.031,0-54.063-10.9,0-21.793,0c.025-7.264,0-14.529.014-21.794q-16.985,0-33.974,0c.012,3.764,0,7.526.005,11.288-1.221-2.974-2.453-5.945-3.638-8.93-.114-2-.01-4.022-.049-6.031M139.919,20.3c0,4.39-.007,8.781.005,13.171,4.38,0,8.761.007,13.141-.005Q146.5,26.887,139.919,20.3Z\\\"\\n                              transform=\\\"translate(-86.503 -11.98)\\\"\\n                            ></path>\\n                            <path\\n                              class=\\\"b\\\"\\n                              fill=\\\"#fff\\\"\\n                              d=\\\"M33.138,31.071a4.276,4.276,0,0,1,4.8,2.116q12.033,29.489,24.07,58.979a4.115,4.115,0,0,1,.5,1.632c.029,3,.054,6.006.1,9.007a1.432,1.432,0,0,1-.713,1.338,1.363,1.363,0,0,1-1.692-.282c-2.059-2.193-4.09-4.411-6.153-6.6a2.09,2.09,0,0,1-.408-.6Q41.43,66.755,29.223,36.846a3.936,3.936,0,0,1,.263-3.326A5.407,5.407,0,0,1,33.138,31.071Z\\\"\\n                              transform=\\\"translate(-28.968 -27.734)\\\"\\n                            ></path>\\n                            <path\\n                              class=\\\"b\\\"\\n                              fill=\\\"#fff\\\"\\n                              d=\\\"M159.99,72.993q10.272-.015,20.546,0,.01,5.1,0,10.191-10.275,0-20.551,0c0-3.4-.007-6.79,0-10.186m3.392,3.392c.017,1.133-.005,2.267,0,3.4q6.879-.013,13.757,0c.007-1.133-.015-2.264,0-3.4Q170.261,76.389,163.382,76.384Z\\\"\\n                              transform=\\\"translate(-137.731 -62.625)\\\"\\n                            ></path>\\n                            <path\\n                              class=\\\"b\\\"\\n                              fill=\\\"#fff\\\"\\n                              d=\\\"M165.59,211.945q20.753.005,41.51-.005c0,1.14,0,2.278.01,3.416q-20.06-.025-40.122-.007C166.511,214.219,166.066,213.075,165.59,211.945Z\\\"\\n                              transform=\\\"translate(-142.385 -177.978)\\\"\\n                            ></path>\\n                            <path\\n                              class=\\\"b\\\"\\n                              fill=\\\"#fff\\\"\\n                              d=\\\"M194.18,281.99q18.328-.015,36.652,0c.019,1.133,0,2.264,0,3.4-11.76,0-23.52.014-35.28-.008C195.111,284.24,194.642,283.116,194.18,281.99Z\\\"\\n                              transform=\\\"translate(-166.12 -236.125)\\\"\\n                            ></path>\\n                            <path\\n                              class=\\\"b\\\"\\n                              fill=\\\"#fff\\\"\\n                              d=\\\"M222.78,351.962c10.656-.017,21.312.008,31.966-.012q.008,7.646,0,15.294-14.44,0-28.882,0c.007-1.131-.008-2.262-.022-3.394q12.754-.005,25.507,0-.005-4.244,0-8.487-13.594-.013-27.19-.005C223.709,354.221,223.233,353.1,222.78,351.962Z\\\"\\n                              transform=\\\"translate(-189.862 -294.208)\\\"\\n                            ></path>\\n                          </g>\\n                        </g>\\n                      </svg>\\n                      <p><span>Build your form</span></p>\\n                      <span>Start building your form by adding questions.</span\\n                      ><button\\n                        (click)=\\\"onAddQuestionToPage()\\\"\\n                        type=\\\"button\\\"\\n                        class=\\\"ant-btn ant-btn-primary ant-btn-lg\\\"\\n                      >\\n                        <span>Add question</span>\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <button\\n                  *ngIf=\\\"getSelectedPageQuestions().length\\\"\\n                  (click)=\\\"onAddQuestionToPage()\\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"ant-btn ant-btn-primary ant-btn-lg ant-btn-block\\\"\\n                >\\n                  <span> </span><span>Add question</span>\\n                </button>\\n\\n                <pre>{{ selectedPage.value | json }}</pre>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-12 col-lg-4 col-xl-3\\\">\\n          <app-page-summery-control-widget></app-page-summery-control-widget>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\";","import { FormArray, FormGroup } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ModelMessengerService } from '../../model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls/question-type-controls-base';\nimport { QuestionType, StringHelpers } from '../../models';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-page-question-builder-viewer',\n  templateUrl: './page-question-builder-viewer.component.html',\n  styleUrls: ['./page-question-builder-viewer.component.css'],\n})\nexport class PageQuestionBuilderViewerComponent implements OnInit {\n  @Input() pageQuestionViewerFormGroup: FormGroup;\n  listOfCollapseQuestions: any[];\n  constructor(public messenger: ModelMessengerService) {\n    this.messenger.activeQuestionType.subscribe((questionId) => {\n      if (questionId) {\n        const questions = this.getQuestions().value as any[];\n\n        this.listOfCollapseQuestions = questions.filter(\n          (x) => x.questionId !== questionId\n        );\n      }\n    });\n  }\n  ngOnInit(): void {}\n  getQuestionTypeObject(type): QuestionType {\n    return StringHelpers.GetQuestionType(type);\n  }\n\n  getQuestions(): FormArray {\n    return StringHelpers.getSelectedPageQuestions(\n      this.pageQuestionViewerFormGroup\n    );\n  }\n\n  isQuestionVisible(questionId: number): boolean {\n    return this.listOfCollapseQuestions.some(\n      (q) => q.questionId === questionId\n    );\n  }\n\n  onOpenQuestionEditor(question: FormGroup): void {\n    this.messenger.onActiveQuestionTypeChanged(question.value.questionId);\n  }\n\n  drop(event: CdkDragDrop<FormGroup[]>): void {\n    moveItemInArray(\n      this.getQuestions().controls,\n      event.previousIndex,\n      event.currentIndex\n    );\n    this.reorderQuestionNumbers();\n  }\n\n  private reorderQuestionNumbers(): void {\n    let questionNumber = 0;\n    this.getQuestions().controls.forEach((fg) => {\n      questionNumber++;\n      fg.get('index').setValue(questionNumber);\n    });\n  }\n}\n","export default \"<app-default-control-widget\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  [questionIndex]=\\\"questionIndex\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === ''\\\"\\n>\\n</app-default-control-widget>\\n\\n<app-text-control-widget\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  [questionIndex]=\\\"questionIndex\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'text'\\\"\\n></app-text-control-widget>\\n\\n<app-number-control-widget\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  [questionIndex]=\\\"questionIndex\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'number'\\\"\\n></app-number-control-widget>\\n<app-date-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'date'\\\"\\n></app-date-control-widget>\\n<app-phone-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'phone-number'\\\"\\n></app-phone-control-widget>\\n\\n<app-image-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'image'\\\"\\n></app-image-control-widget\\n><app-audio-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'audio'\\\"\\n></app-audio-control-widget\\n><app-video-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'video'\\\"\\n></app-video-control-widget\\n><app-gis-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'gis-polygon'\\\"\\n></app-gis-control-widget\\n><app-gps-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'gis'\\\"\\n></app-gps-control-widget\\n><app-introductory-text-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'intro'\\\"\\n></app-introductory-text-control-widget\\n><app-fingerprint-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'fingerprint'\\\"\\n></app-fingerprint-control-widget\\n><app-signature-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'signature'\\\"\\n></app-signature-control-widget>\\n\\n<app-calculation-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'function'\\\"\\n></app-calculation-control-widget>\\n\\n<app-multiple-choice-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'multi-select'\\\"\\n></app-multiple-choice-control-widget>\\n\\n<app-tree-option-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'option-tree'\\\"\\n></app-tree-option-control-widget>\\n\\n<app-bar-code-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'bar-code'\\\"\\n></app-bar-code-control-widget>\\n\\n<app-email-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'email'\\\"\\n></app-email-control-widget>\\n\\n<app-qr-code-control-widget\\n  [questionIndex]=\\\"questionIndex\\\"\\n  [questionControlFormGroup]=\\\"builderQuestionFormGroup\\\"\\n  *ngIf=\\\"builderQuestionFormGroup.value.type === 'qrcode'\\\"\\n></app-qr-code-control-widget>\\n\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvcGhvbmUtY29udHJvbC13aWRnZXQvcGhvbmUtY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvdHJlZS1vcHRpb24tY29udHJvbC13aWRnZXQvdHJlZS1vcHRpb24tY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup\\n                    .get('validation')\\n                    .get('acceptDecimal')\\n                \\\"\\n                >Accept decimals</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvZGF0ZS1jb250cm9sLXdpZGdldC9kYXRlLWNvbnRyb2wtd2lkZ2V0LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvY2FsY3VsYXRpb24tY29udHJvbC13aWRnZXQvY2FsY3VsYXRpb24tY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export default \"<div class=\\\"advancedOpts\\\">\\n  <div>\\n    <div class=\\\"question-hint\\\">\\n      <div class=\\\"mb-1\\\">\\n        <div\\n          style=\\\"\\n            font-size: 13px;\\n            padding: 0px 0px 8px;\\n            display: flex;\\n            align-items: center;\\n            color: rgb(82, 80, 80);\\n            font-weight: bold;\\n          \\\"\\n        >\\n          <span>Help Text / Instruction</span>\\n        </div>\\n        <textarea\\n          placeholder=\\\"Enter Hint\\\"\\n          [formControl]=\\\"questionAdvanceControlFormGroup.controls['hint']\\\"\\n          class=\\\"text-input q-builder-text-bg\\\"\\n          style=\\\"height: 70px\\\"\\n        ></textarea>\\n        <div class=\\\"input-counter\\\"></div>\\n      </div>\\n      <div style=\\\"display: flex; justify-content: space-between\\\">\\n        <div style=\\\"flex: 1 1 0%\\\">\\n          <div class=\\\"mb-1\\\">\\n            <div\\n              style=\\\"\\n                font-size: 13px;\\n                padding: 0px 0px 8px;\\n                display: flex;\\n                align-items: center;\\n                color: rgb(82, 80, 80);\\n                font-weight: bold;\\n                margin-top: 12px;\\n              \\\"\\n            >\\n              <span>Keyword</span\\n              ><span\\n                matTooltip=\\\"Assign a unique name that can be used to identify this\\n                    question during data analysis. This keyword can be used as a\\n                    column name for this question whilst exporting data. NB: Max\\n                    length of 20 characters\\\"\\n                ><img\\n                  src=\\\"https://insyt.esoko.com/static/media/question-mark.d3592906.svg\\\"\\n                  width=\\\"14\\\"\\n                  alt=\\\"help icon\\\"\\n                  style=\\\"cursor: pointer\\\"\\n              /></span>\\n            </div>\\n            <input\\n              class=\\\"text-input q-builder-text-bg number-input\\\"\\n              placeholder=\\\"Column name\\\"\\n              type=\\\"text\\\"\\n              maxlength=\\\"30\\\"\\n              [formControl]=\\\"\\n                questionAdvanceControlFormGroup.controls['keyword_value']\\n              \\\"\\n            />\\n            <div class=\\\"input-counter\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n      <div style=\\\"display: flex; justify-content: space-between\\\">\\n        <div style=\\\"color: rgb(82, 80, 80); font-weight: bold; width: 49%\\\">\\n          <div class=\\\"mb-1\\\">\\n            <div\\n              style=\\\"\\n                font-size: 13px;\\n                padding: 0px 0px 8px;\\n                display: flex;\\n                align-items: center;\\n                margin-top: 12px;\\n              \\\"\\n            >\\n              <span\\n                matTooltip=\\\"You can enter Regular Expression formulae here to run\\n                    advanced validation on data collected. Eg. /([A-Z])w+/i NB:\\n                    Use with caution\\\"\\n                >Regular Expression</span\\n              ><span\\n                ><img\\n                  src=\\\"https://insyt.esoko.com/static/media/question-mark.d3592906.svg\\\"\\n                  width=\\\"14\\\"\\n                  alt=\\\"help icon\\\"\\n                  style=\\\"cursor: pointer\\\"\\n              /></span>\\n            </div>\\n            <input\\n              class=\\\"text-input q-builder-text-bg number-input\\\"\\n              placeholder=\\\"Enter Regex\\\"\\n              type=\\\"text\\\"\\n              [formControl]=\\\"\\n                questionAdvanceControlFormGroup.get('validation').get('regex')\\n              \\\"\\n            />\\n            <div class=\\\"input-counter\\\"></div>\\n          </div>\\n        </div>\\n        <div style=\\\"width: 49%\\\">\\n          <div class=\\\"mb-1\\\">\\n            <div\\n              style=\\\"\\n                font-size: 13px;\\n                padding: 0px 0px 8px;\\n                display: flex;\\n                align-items: center;\\n                color: rgb(82, 80, 80);\\n                font-weight: bold;\\n                margin-top: 12px;\\n              \\\"\\n            >\\n              <span\\n                matTooltip=\\\"Provide a valid example to test against regex formulae. Eg.\\n                    something@insyt.com\\\"\\n                >Valid Example</span\\n              ><span\\n                ><img\\n                  src=\\\"https://insyt.esoko.com/static/media/question-mark.d3592906.svg\\\"\\n                  width=\\\"14\\\"\\n                  alt=\\\"help icon\\\"\\n                  style=\\\"cursor: pointer\\\"\\n              /></span>\\n            </div>\\n            <input\\n              data-insyt-id=\\\"WidgetBuilderForms-regex-input\\\"\\n              class=\\\"text-input q-builder-text-bg number-input\\\"\\n              placeholder=\\\"Enter Example\\\"\\n              [formControl]=\\\"\\n                questionAdvanceControlFormGroup\\n                  .get('validation')\\n                  .get('regexTest')\\n              \\\"\\n            />\\n            <div class=\\\"input-counter\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"resizeInput\\\">\\n    <div\\n      class=\\\"x-text-constraint\\\"\\n      style=\\\"color: rgb(82, 80, 80); font-weight: bold; font-size: 15px\\\"\\n    >\\n      <span> Allowed value range</span>\\n    </div>\\n    <div style=\\\"display: flex\\\">\\n      <div class=\\\"char-length\\\">\\n        <div class=\\\"mb-1\\\">\\n          <div\\n            style=\\\"\\n              font-size: 13px;\\n              padding: 0px 0px 8px;\\n              display: flex;\\n              align-items: center;\\n            \\\"\\n          >\\n            Min\\n          </div>\\n          <input\\n            class=\\\"text-input q-builder-text-bg number-input\\\"\\n            placeholder=\\\"Min\\\"\\n            type=\\\"number\\\"\\n            [formControl]=\\\"\\n              questionAdvanceControlFormGroup.get('validation').get('min')\\n            \\\"\\n          />\\n          <div class=\\\"input-counter\\\"></div>\\n        </div>\\n      </div>\\n      <div\\n        style=\\\"\\n          margin-left: 2%;\\n          width: 49%;\\n          display: inline-block;\\n          margin-bottom: 10px;\\n        \\\"\\n      >\\n        <div class=\\\"mb-1\\\">\\n          <div\\n            style=\\\"\\n              font-size: 13px;\\n              padding: 0px 0px 8px;\\n              display: flex;\\n              align-items: center;\\n            \\\"\\n          >\\n            Max\\n          </div>\\n          <input\\n            class=\\\"text-input q-builder-text-bg number-input\\\"\\n            placeholder=\\\"Max\\\"\\n            type=\\\"number\\\"\\n            [formControl]=\\\"\\n              questionAdvanceControlFormGroup.get('validation').get('max')\\n            \\\"\\n          />\\n          <div class=\\\"input-counter\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"check-box-widget\\\">\\n    <mat-slide-toggle\\n      [formControl]=\\\"questionAdvanceControlFormGroup.get('useAsSummary')\\\"\\n      ><span>Use as response summary</span>\\n    </mat-slide-toggle>\\n  </div>\\n  <div>\\n    <div>\\n      <div style=\\\"display: flex\\\">\\n        <mat-slide-toggle\\n          ><span>Skip this question when</span>\\n        </mat-slide-toggle>\\n      </div>\\n      <app-question-skip-logic-widget></app-question-skip-logic-widget>\\n    </div>\\n  </div>\\n  <div class=\\\"check-box-widget\\\">\\n    <mat-slide-toggle><span>Validation rules</span> </mat-slide-toggle>\\n  </div>\\n  <div class=\\\"check-box-widget\\\">\\n    <mat-slide-toggle><span>Autofill</span> </mat-slide-toggle>\\n  </div>\\n\\n  <div class=\\\"check-box-widget\\\">\\n    <mat-slide-toggle><span>Checkpoint</span> </mat-slide-toggle>\\n  </div>\\n\\n  <div class=\\\"questionWidget__advDiv\\\">\\n    <div>\\n      <span\\n        class=\\\"float-right pointer\\\"\\n        style=\\\"font-size: 14px; color: rgb(245, 127, 65); margin-right: 20px\\\"\\n        ><span>Move to another page</span></span\\n      >\\n    </div>\\n    <div>\\n      <span\\n        style=\\\"\\n          font-size: 14px;\\n          color: rgb(245, 127, 65);\\n          margin-right: 1rem;\\n          cursor: pointer;\\n        \\\"\\n        ><span>Delete</span></span\\n      >\\n    </div>\\n  </div>\\n</div>\\n\";","import { StringHelpers } from './../../../models';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\n\n@Component({\n  selector: 'app-text-control-widget',\n  templateUrl: './text-control-widget.component.html',\n  styleUrls: ['./text-control-widget.component.css'],\n})\nexport class TextControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('text', messenger);\n  }\n\n  ngOnInit(): void {\n    // this.questionControlFormGroup.valueChanges.subscribe((fg) => {\n    //   console.log(fg);\n    // });\n  }\n\n  onOpenQuestionWidgetMenu(): void {\n    console.log('open menu');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvZGVmYXVsdC1jb250cm9sLXdpZGdldC9kZWZhdWx0LWNvbnRyb2wtd2lkZ2V0LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvZ3BzLWNvbnRyb2wtd2lkZ2V0L2dwcy1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-fingerprint-control-widget',\n  templateUrl: './fingerprint-control-widget.component.html',\n  styleUrls: ['./fingerprint-control-widget.component.css'],\n})\nexport class FingerprintControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('fingerprint', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvYXVkaW8tY29udHJvbC13aWRnZXQvYXVkaW8tY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","import { ModelMessengerService } from './../../../model-messenger.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { StringHelpers } from 'src/app/form-builder-v2/models';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-number-control-widget',\n  templateUrl: './number-control-widget.component.html',\n  styleUrls: ['./number-control-widget.component.css'],\n})\nexport class NumberControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('number', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-video-control-widget',\n  templateUrl: './video-control-widget.component.html',\n  styleUrls: ['./video-control-widget.component.css'],\n})\nexport class VideoControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('video', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { ModelMessengerService } from './../../../model-messenger.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { StringHelpers } from 'src/app/form-builder-v2/models';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-email-control-widget',\n  templateUrl: './email-control-widget.component.html',\n  styleUrls: ['./email-control-widget.component.css'],\n})\nexport class EmailControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('email', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-image-control-widget',\n  templateUrl: './image-control-widget.component.html',\n  styleUrls: ['./image-control-widget.component.css'],\n})\nexport class ImageControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('image', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-multiple-choice-control-widget',\n  templateUrl: './multiple-choice-control-widget.component.html',\n  styleUrls: ['./multiple-choice-control-widget.component.css'],\n})\nexport class MultipleChoiceControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('multi-select', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3BhZ2UtcXVlc3Rpb24tYnVpbGRlci12aWV3ZXIvcGFnZS1xdWVzdGlvbi1idWlsZGVyLXZpZXdlci5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvdGV4dC1jb250cm9sLXdpZGdldC90ZXh0LWNvbnRyb2wtd2lkZ2V0LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvcGFnZS1zdW1tZXJ5LWNvbnRyb2wtd2lkZ2V0L3BhZ2Utc3VtbWVyeS1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","import { QuestionBuilderMessengerModel } from './../../models';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { ModelMessengerService } from '../../model-messenger.service';\nimport {\n  PageModel,\n  SelectedQuestionTypeModel,\n  StringHelpers,\n} from '../../models';\n\n@Component({\n  selector: 'app-page-builder-widget',\n  templateUrl: './page-builder-widget.component.html',\n  styleUrls: ['./page-builder-widget.component.css'],\n})\nexport class PageBuilderWidgetComponent implements OnInit {\n  @Input() pageControlFormGroup: FormGroup;\n  selectedPageObject: PageModel;\n  selectedQuestionType: SelectedQuestionTypeModel;\n\n  constructor(\n    private fb: FormBuilder,\n    private messenger: ModelMessengerService\n  ) {\n    this.messenger.questionBuilder.subscribe(\n      (model: QuestionBuilderMessengerModel) => {\n        if (model) {\n          this.onMessageReceiveFromQuestionWidget(model);\n        }\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  getSelectedPageQuestions(): FormArray {\n    return StringHelpers.getSelectedPageQuestions(this.pageControlFormGroup);\n  }\n  onAddQuestionToPage(): void {\n    const selectedPageQustions = StringHelpers.getSelectedPageQuestions(\n      this.pageControlFormGroup\n    );\n\n    const questionNumber = selectedPageQustions.controls.length + 1;\n\n    const questionId = StringHelpers.GetQuestionId();\n    const newQuestion = this.fb.group({\n      questionId: [questionId],\n      type: ['', [Validators.required]],\n      hint: ['', [Validators.required]],\n      index: [questionNumber, [Validators.required]],\n      title: ['', [Validators.required]],\n      keyword_label: [''],\n      keyword_value: [''],\n      countryCode: 'GH',\n      useAsSummary: false,\n      validation: this.fb.group({\n        required: [false, [Validators.required]],\n        acceptDecimal: [''],\n        regex: '',\n        regexTest: '',\n        max: '',\n        min: '', // depend on type\n        verify: '', // Use for phone numbers\n      }),\n      dependencies: this.fb.group({\n        logic: '',\n        action: '',\n        rules: this.fb.array([]),\n      }),\n      validationRules: this.fb.array([]),\n      options: this.fb.array([]),\n    });\n\n    selectedPageQustions.push(newQuestion);\n\n    this.selectedQuestionType = { type: '', title: '' };\n    this.messenger.onActiveQuestionTypeChanged(questionId);\n  }\n\n  onMessageReceiveFromQuestionWidget(\n    model: QuestionBuilderMessengerModel\n  ): void {\n    if (model.action === StringHelpers.QUESTION_BUILDER_DELETE) {\n      this.onDeletePageQuestion(model.fromGroup, model.formGroupIndex);\n    }\n  }\n  onDeletePageQuestion(fromGroup: FormGroup, formGroupIndex: number): void {\n    // const questions = this.selectedPage.get('questions') as FormArray;\n\n    if (fromGroup.value.type) {\n      // TODO:: Prompt User before delete\n      console.log('// TODO:: Prompt User before delete');\n      this.commitPageQuestionDelete(formGroupIndex);\n    } else {\n      this.commitPageQuestionDelete(formGroupIndex);\n    }\n  }\n\n  private commitPageQuestionDelete(formGroupIndex: number): void {\n    this.getSelectedPageQuestions().removeAt(formGroupIndex);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvbnVtYmVyLWNvbnRyb2wtd2lkZ2V0L251bWJlci1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div\\n  class=\\\"skipLogics__container\\\"\\n  style=\\\"background: rgb(245, 246, 248); padding: 1rem; margin-bottom: 1rem\\\"\\n>\\n  <div\\n    class=\\\"ant-radio-group ant-radio-group-outline\\\"\\n    style=\\\"margin: 0.5rem 0px\\\"\\n  >\\n    <section class=\\\"example-section\\\">\\n      <mat-radio-group>\\n        <mat-radio-button\\n          style=\\\"margin: 10px\\\"\\n          class=\\\"ant-radio-wrapper ant-radio-wrapper-checked\\\"\\n          value=\\\"primary\\\"\\n        >\\n          All conditions are met\\n        </mat-radio-button>\\n        <mat-radio-button\\n          style=\\\"margin: 10px\\\"\\n          class=\\\"ant-radio-wrapper\\\"\\n          value=\\\"accent\\\"\\n        >\\n          One condition is met\\n        </mat-radio-button>\\n      </mat-radio-group>\\n    </section>\\n  </div>\\n  <div style=\\\"display: flex; align-items: center; margin-bottom: 0.5rem\\\">\\n    <select\\n      class=\\\"form-control form-control-sm\\\"\\n      style=\\\"width: 35%; margin-right: 8px\\\"\\n    >\\n      <option>Sample</option>\\n    </select>\\n    <select\\n      style=\\\"width: 20%; margin-right: 8px\\\"\\n      class=\\\"form-control form-control-sm\\\"\\n    >\\n      <option>Sample</option>\\n    </select>\\n    <input\\n      style=\\\"width: 35%; margin-right: 8px\\\"\\n      class=\\\"form-control form-control-sm\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\".form-control-sm\\\"\\n    /><button type=\\\"button\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <p style=\\\"cursor: pointer; color: rgb(6, 40, 165)\\\"><span>Add Rule</span></p>\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-gis-control-widget',\n  templateUrl: './gis-control-widget.component.html',\n  styleUrls: ['./gis-control-widget.component.css'],\n})\nexport class GisControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('gis-polygon', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvZW1haWwtY29udHJvbC13aWRnZXQvZW1haWwtY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvcXItY29kZS1jb250cm9sLXdpZGdldC9xci1jb2RlLWNvbnRyb2wtd2lkZ2V0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModelMessengerService } from '../../model-messenger.service';\nimport { PageModel, StringHelpers } from '../../models';\n\n@Component({\n  selector: 'app-form-builder-widget',\n  templateUrl: './form-builder-widget.component.html',\n  styleUrls: ['./form-builder-widget.component.css'],\n})\nexport class FormBuilderWidgetComponent implements OnInit {\n  pages: FormArray;\n  selectedPage: FormGroup;\n  selectedPageObject: PageModel;\n\n  constructor(\n    private fb: FormBuilder,\n    private messenger: ModelMessengerService\n  ) {\n    this.pages = this.fb.array([]);\n  }\n\n  ngOnInit(): void {\n    if (!this.pages.length) {\n      this.onAddNewPage();\n    }\n  }\n\n  getPages(): any[] {\n    return this.pages.controls.map((page) => ({\n      pageId: page.value.pageId,\n      name: page.value.name,\n    }));\n  }\n\n  onAddNewPage(): void {\n    const pageNumber = this.pages.length + 1;\n\n    const pageId = StringHelpers.GetPageId();\n    const newPage = this.fb.group({\n      pageId: [pageId],\n      name: [`Page - ${pageNumber}`, [Validators.required]],\n      description: '',\n      questions: this.fb.array([]),\n    });\n    this.pages.push(newPage);\n    this.selectedPage = newPage;\n    this.UpdateSelectedPageObject();\n  }\n\n  onPageChange(newPageId): void {\n    this.selectedPage = this.pages.controls.find(\n      (a) => a.value.pageId === this.selectedPageObject.pageId\n    ) as FormGroup;\n\n    this.UpdateSelectedPageObject();\n  }\n\n  private UpdateSelectedPageObject(): void {\n    this.selectedPageObject = this.selectedPage.value;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-introductory-text-control-widget',\n  templateUrl: './introductory-text-control-widget.component.html',\n  styleUrls: ['./introductory-text-control-widget.component.css'],\n})\nexport class IntroductoryTextControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('intro', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-bar-code-control-widget',\n  templateUrl: './bar-code-control-widget.component.html',\n  styleUrls: ['./bar-code-control-widget.component.css'],\n})\nexport class BarCodeControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('bar-code', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'form-builder-app';\n}\n","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvbXVsdGlwbGUtY2hvaWNlLWNvbnRyb2wtd2lkZ2V0L211bHRpcGxlLWNob2ljZS1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvYmFyLWNvZGUtY29udHJvbC13aWRnZXQvYmFyLWNvZGUtY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"<div class=\\\"formMetaCard\\\">\\n  <div class=\\\"formMetaCard__Header hidden\\\">\\n    <span>Form Details</span>\\n  </div>\\n  <div class=\\\"formMetaCard__Body hidden\\\">\\n    <div class=\\\"formMetaCard__BodyRow\\\">\\n      <span class=\\\"formMetaCard__BodyRowLabel\\\"><span>Access code: </span></span\\n      ><span class=\\\"formMetaCard__BodyRowValue\\\">1406162</span>\\n    </div>\\n    <div class=\\\"formMetaCard__BodyRow\\\">\\n      <span class=\\\"formMetaCard__BodyRowLabel\\\"><span>Status: </span></span\\n      ><span class=\\\"formMetaCard__BodyRowValue\\\">Not published</span>\\n    </div>\\n    <div class=\\\"formMetaCard__BodyRow\\\">\\n      <span class=\\\"formMetaCard__BodyRowLabel\\\"><span>Questions: </span></span\\n      ><span class=\\\"formMetaCard__BodyRowValue\\\">3</span>\\n    </div>\\n    <div class=\\\"formMetaCard__BodyRow\\\">\\n      <span class=\\\"formMetaCard__BodyRowLabel\\\"><span>Responses: </span></span\\n      ><span class=\\\"formMetaCard__BodyRowValue\\\"><span>0</span></span>\\n    </div>\\n    <div class=\\\"formMetaCard__BodyRow\\\" style=\\\"justify-content: space-between\\\">\\n      <span class=\\\"formMetaCard__BodyRowLabel\\\"\\n        ><span>Last modified: </span> 4 seconds ago</span\\n      ><span class=\\\"formMetaCard__BodyRowValue\\\"\\n        ><span style=\\\"color: rgb(12, 76, 172); cursor: pointer\\\"\\n          >See activity log</span\\n        ></span\\n      >\\n    </div>\\n  </div>\\n  <div class=\\\"formMetaCard__Footer\\\">\\n    <div style=\\\"padding: 0.5rem 0px\\\">\\n      <button\\n        type=\\\"button\\\"\\n        role=\\\"switch\\\"\\n        aria-checked=\\\"false\\\"\\n        class=\\\"ant-switch-small ant-switch\\\"\\n      >\\n        <span class=\\\"ant-switch-inner\\\"></span>\\n      </button>\\n      <span>Auto publish</span>\\n      <img\\n        src=\\\"https://insyt.esoko.com/static/media/question-mark.d3592906.svg\\\"\\n        width=\\\"15\\\"\\n        alt=\\\"help icon\\\"\\n        style=\\\"cursor: pointer\\\"\\n      />\\n    </div>\\n    <div class=\\\"formMetaCard__FooterBtns\\\">\\n      <button\\n        datainsytid=\\\"question-save\\\"\\n        type=\\\"button\\\"\\n        class=\\\"ant-btn ant-btn-primary\\\"\\n      >\\n        <span> </span><span>Save</span>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<!-- <app-form-builder-main></app-form-builder-main> -->\\n\\n<!-- <app-page-control-widget></app-page-control-widget> -->\\n\\n<app-form-builder-widget></app-form-builder-widget>\\n\\n<router-outlet></router-outlet>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3BhZ2UtcXVlc3Rpb24tYnVpbGRlci9wYWdlLXF1ZXN0aW9uLWJ1aWxkZXIuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvdmlkZW8tY29udHJvbC13aWRnZXQvdmlkZW8tY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","import { ModelMessengerService } from './../../../model-messenger.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { StringHelpers } from 'src/app/form-builder-v2/models';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-date-control-widget',\n  templateUrl: './date-control-widget.component.html',\n  styleUrls: ['./date-control-widget.component.css'],\n})\nexport class DateControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('date', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3BhZ2UtYnVpbGRlci13aWRnZXQvcGFnZS1idWlsZGVyLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","import { ModelMessengerService } from './form-builder-v2/model-messenger.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageControlWidgetComponent } from './form-builder-v2/widgets/page-control-widget/page-control-widget.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PageQuestionBuilderComponent } from './form-builder-v2/widgets/page-question-builder/page-question-builder.component';\nimport { TextControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/text-control-widget/text-control-widget.component';\nimport { DateControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/date-control-widget/date-control-widget.component';\nimport { PhoneControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/phone-control-widget/phone-control-widget.component';\nimport { EmailControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/email-control-widget/email-control-widget.component';\nimport { NumberControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/number-control-widget/number-control-widget.component';\nimport { PageSummeryControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/page-summery-control-widget/page-summery-control-widget.component';\nimport { QuestionTypeAdvanceWidgetComponent } from './form-builder-v2/widgets/question-type-controls/question-type-advance-widget/question-type-advance-widget.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { QuestionSkipLogicWidgetComponent } from './form-builder-v2/widgets/question-type-controls/question-widget-advance/question-skip-logic-widget/question-skip-logic-widget.component';\nimport { PageQuestionBuilderViewerComponent } from './form-builder-v2/widgets/page-question-builder-viewer/page-question-builder-viewer.component';\nimport { FormBuilderWidgetComponent } from './form-builder-v2/widgets/form-builder-widget/form-builder-widget.component';\nimport { PageBuilderWidgetComponent } from './form-builder-v2/widgets/page-builder-widget/page-builder-widget.component';\nimport { DefaultControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/default-control-widget/default-control-widget.component';\nimport { MultipleChoiceControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/multiple-choice-control-widget/multiple-choice-control-widget.component';\nimport { IntroductoryTextControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/introductory-text-control-widget/introductory-text-control-widget.component';\nimport { ImageControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/image-control-widget/image-control-widget.component';\nimport { AudioControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/audio-control-widget/audio-control-widget.component';\nimport { VideoControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/video-control-widget/video-control-widget.component';\nimport { GpsControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/gps-control-widget/gps-control-widget.component';\nimport { GisControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/gis-control-widget/gis-control-widget.component';\nimport { SignatureControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/signature-control-widget/signature-control-widget.component';\nimport { FingerprintControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/fingerprint-control-widget/fingerprint-control-widget.component';\nimport { TreeOptionControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/tree-option-control-widget/tree-option-control-widget.component';\nimport { CalculationControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/calculation-control-widget/calculation-control-widget.component';\nimport { QrCodeControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/qr-code-control-widget/qr-code-control-widget.component';\nimport { BarCodeControlWidgetComponent } from './form-builder-v2/widgets/question-type-controls/bar-code-control-widget/bar-code-control-widget.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    PageControlWidgetComponent,\n    PageQuestionBuilderViewerComponent,\n    PageSummeryControlWidgetComponent,\n    PageQuestionBuilderComponent,\n    TextControlWidgetComponent,\n    DateControlWidgetComponent,\n    PhoneControlWidgetComponent,\n    EmailControlWidgetComponent,\n    NumberControlWidgetComponent,\n    QuestionTypeAdvanceWidgetComponent,\n    QuestionSkipLogicWidgetComponent,\n    PageQuestionBuilderViewerComponent,\n    FormBuilderWidgetComponent,\n    PageBuilderWidgetComponent,\n    DefaultControlWidgetComponent,\n    MultipleChoiceControlWidgetComponent,\n    IntroductoryTextControlWidgetComponent,\n    ImageControlWidgetComponent,\n    AudioControlWidgetComponent,\n    VideoControlWidgetComponent,\n    GpsControlWidgetComponent,\n    GisControlWidgetComponent,\n    SignatureControlWidgetComponent,\n    FingerprintControlWidgetComponent,\n    TreeOptionControlWidgetComponent,\n    CalculationControlWidgetComponent,\n    QrCodeControlWidgetComponent,\n    BarCodeControlWidgetComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatMenuModule,\n    MatRadioModule,\n    DragDropModule,\n    MatCheckboxModule,\n    NgxJsonViewerModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [ModelMessengerService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvaW50cm9kdWN0b3J5LXRleHQtY29udHJvbC13aWRnZXQvaW50cm9kdWN0b3J5LXRleHQtY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvcXVlc3Rpb24tdHlwZS1hZHZhbmNlLXdpZGdldC9xdWVzdGlvbi10eXBlLWFkdmFuY2Utd2lkZ2V0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-question-skip-logic-widget',\n  templateUrl: './question-skip-logic-widget.component.html',\n  styleUrls: ['./question-skip-logic-widget.component.css'],\n})\nexport class QuestionSkipLogicWidgetComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","export default \"<style>\\n  .cdk-drag-preview {\\n    box-sizing: border-box;\\n    border-radius: 4px;\\n    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\\n      0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n  }\\n\\n  .cdk-drag-animating {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n  }\\n</style>\\n\\n<div cdkDropList (cdkDropListDropped)=\\\"drop($event)\\\">\\n  <div\\n    *ngFor=\\\"let question of getQuestions().controls; let questionIndex = index\\\"\\n  >\\n    <div\\n      class=\\\"mb-3\\\"\\n      *ngIf=\\\"\\n        question.value.type && isQuestionVisible(question.value.questionId)\\n      \\\"\\n    >\\n      <div class=\\\"questionWidget\\\" cdkDrag style=\\\"cursor: pointer\\\">\\n        <div class=\\\"questionWidget__handle\\\" cdkDragHandle>\\n          <div class=\\\"questionWidget__handleNumber\\\">\\n            {{ question.value.index }}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"survey-content questionWidget__collapse\\\">\\n          <div>\\n            <img\\n              class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n              src=\\\"assets/icons/ellipsis.svg\\\"\\n              style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n          <div\\n            class=\\\"questionWidget__collapseInner\\\"\\n            (click)=\\\"onOpenQuestionEditor(question)\\\"\\n            style=\\\"cursor: pointer\\\"\\n          >\\n            <div class=\\\"question-title\\\">\\n              <div class=\\\"text-truncate\\\" style=\\\"font-size: 14px\\\">\\n                {{\\n                  question.value.title\\n                    ? question.value.title\\n                    : \\\"--Provide Question--\\\"\\n                }}\\n              </div>\\n            </div>\\n            <div style=\\\"cursor: pointer\\\">\\n              <i\\n                class=\\\"material-icons orange600 md-24\\\"\\n                style=\\\"margin-right: 16px\\\"\\n                >{{ getQuestionTypeObject(question.value.type).icon2 }}</i\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvZ2lzLWNvbnRyb2wtd2lkZ2V0L2dpcy1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionType, StringHelpers } from '../../models';\n\n@Component({\n  selector: 'app-page-question-builder',\n  templateUrl: './page-question-builder.component.html',\n  styleUrls: ['./page-question-builder.component.css'],\n})\nexport class PageQuestionBuilderComponent implements OnInit {\n  @Input() builderQuestionFormGroup: FormGroup;\n  questionTypes: QuestionType[];\n  @Input() questionIndex: number;\n\n  constructor() {\n    this.questionTypes = StringHelpers.QustionTypes;\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-gps-control-widget',\n  templateUrl: './gps-control-widget.component.html',\n  styleUrls: ['./gps-control-widget.component.css'],\n})\nexport class GpsControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('gis', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"<style>\\n  .no-page-questions .no-page-questions__Container img {\\n    width: 130px;\\n    margin-bottom: 1rem;\\n  }\\n</style>\\n\\n<div style=\\\"padding-top: 55px\\\">\\n  <div class=\\\"q-page-content\\\" style=\\\"margin-top: 20px\\\">\\n    <div style=\\\"position: relative\\\">\\n      <form [formGroup]=\\\"pageControlFormGroup\\\">\\n        <div formArrayName=\\\"questions\\\">\\n          <app-page-question-builder-viewer\\n            [pageQuestionViewerFormGroup]=\\\"pageControlFormGroup\\\"\\n          >\\n          </app-page-question-builder-viewer>\\n\\n          <div\\n            *ngFor=\\\"\\n              let question of getSelectedPageQuestions().controls;\\n              let questionIndex = index\\n            \\\"\\n            [formGroupName]=\\\"questionIndex\\\"\\n          >\\n            <div class=\\\"mb-3\\\">\\n              <app-page-question-builder\\n                [builderQuestionFormGroup]=\\\"question\\\"\\n                [questionIndex]=\\\"questionIndex\\\"\\n              >\\n              </app-page-question-builder>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"no-page-questions\\\" *ngIf=\\\"!getSelectedPageQuestions().length\\\">\\n      <div class=\\\"no-page-questions__Container\\\">\\n        <img src=\\\"assets/icons/no-page-questions.svg\\\" />\\n\\n        <p><span>Build your form</span></p>\\n        <span>Start building your form by adding questions.</span\\n        ><button\\n          (click)=\\\"onAddQuestionToPage()\\\"\\n          type=\\\"button\\\"\\n          class=\\\"ant-btn ant-btn-primary ant-btn-lg\\\"\\n        >\\n          <span>Add question</span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <button\\n    *ngIf=\\\"getSelectedPageQuestions().length\\\"\\n    (click)=\\\"onAddQuestionToPage()\\\"\\n    type=\\\"button\\\"\\n    class=\\\"ant-btn ant-btn-primary ant-btn-lg ant-btn-block\\\"\\n  >\\n    <span> </span><span>Add question</span>\\n  </button>\\n\\n  <ngx-json-viewer [json]=\\\"pageControlFormGroup.value\\\"></ngx-json-viewer>\\n  <!-- <pre>{{ pageControlFormGroup.value | json }}</pre> -->\\n</div>\\n\";","import { QuestionTypeControlBase } from './../question-type-controls-base';\nimport { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\n\n@Component({\n  selector: 'app-qr-code-control-widget',\n  templateUrl: './qr-code-control-widget.component.html',\n  styleUrls: ['./qr-code-control-widget.component.css'],\n})\nexport class QrCodeControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('qrcode', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3BhZ2UtY29udHJvbC13aWRnZXQvcGFnZS1jb250cm9sLXdpZGdldC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-calculation-control-widget',\n  templateUrl: './calculation-control-widget.component.html',\n  styleUrls: ['./calculation-control-widget.component.css'],\n})\nexport class CalculationControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('function', messenger);\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-summery-control-widget',\n  templateUrl: './page-summery-control-widget.component.html',\n  styleUrls: ['./page-summery-control-widget.component.css']\n})\nexport class PageSummeryControlWidgetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { QuestionType } from './../../../models';\nimport { Component, OnInit } from '@angular/core';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\nimport { QuestionTypeControlBase } from '../question-type-controls-base';\n\n@Component({\n  selector: 'app-default-control-widget',\n  templateUrl: './default-control-widget.component.html',\n  styleUrls: ['./default-control-widget.component.css'],\n})\nexport class DefaultControlWidgetComponent\n  extends QuestionTypeControlBase\n  implements OnInit {\n  constructor(public messenger: ModelMessengerService) {\n    super('', messenger);\n  }\n\n  ngOnInit(): void {}\n  onSelectedQuestionType(questionType: QuestionType): void {\n    this.questionControlFormGroup.controls.type.setValue(questionType.typeId);\n  }\n}\n","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvcXVlc3Rpb24td2lkZ2V0LWFkdmFuY2UvcXVlc3Rpb24tc2tpcC1sb2dpYy13aWRnZXQvcXVlc3Rpb24tc2tpcC1sb2dpYy13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img\\n        [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\"\\n        style=\\\"transform: rotate(90deg); cursor: pointer\\\"\\n        alt=\\\"ico\\\"\\n      />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input\\n                class=\\\"text-input q-builder-text-bg number-input\\\"\\n                placeholder=\\\"Enter question\\\"\\n                type=\\\"text\\\"\\n                maxlength=\\\"\\\"\\n                [formControl]=\\\"questionControlFormGroup.controls['title']\\\"\\n              />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div\\n            style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\"\\n          >\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span\\n            >&nbsp;\\n            <img\\n              src=\\\"assets/icons/arrow-up.svg\\\"\\n              width=\\\"11.74px\\\"\\n              height=\\\"14px\\\"\\n              alt=\\\"ico\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div\\n              class=\\\"check-box-widget\\\"\\n              style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\"\\n            >\\n              <mat-checkbox\\n                [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\"\\n                >This is required</mat-checkbox\\n              >\\n            </div>\\n          </div>\\n          <div>\\n            <span\\n              class=\\\"delete-question-widget-on-editor\\\"\\n              (click)=\\\"onRemoveQuesion()\\\"\\n              ><span>Delete</span></span\\n            ><span\\n              class=\\\"text-truncate\\\"\\n              style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"\\n              ><span><span>Validations &amp; Skip Logics</span></span\\n              >&nbsp;\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_more</i\\n              >\\n              <i\\n                style=\\\"vertical-align: middle; border-style: none\\\"\\n                *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\"\\n                >expand_less</i\\n              >\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget\\n          [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"\\n        ></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","export default \"<style>\\n  .qBuilderPages_Wrapper {\\n    /* position: fixed; */\\n    /* z-index: 200; */\\n    width: 80%;\\n    background-color: #f3f5f7;\\n    /* padding: 2.5rem 0 0.8rem; */\\n    /* margin-top: -1.5rem; */\\n  }\\n</style>\\n\\n<div>\\n  <div style=\\\"margin-top: 10px\\\">\\n    <div class=\\\"container-fluid q_page__mobile\\\">\\n      <div class=\\\"row flex-column-reverse flex-md-row\\\">\\n        <div\\n          class=\\\"col-md-12 col-lg-8 col-xl-9 back-white\\\"\\n          style=\\\"padding-bottom: 3rem\\\"\\n        >\\n          <div class=\\\"questions-content\\\" *ngIf=\\\"pages\\\">\\n            <div>\\n              <div class=\\\"qBuilderPages_Wrapper\\\">\\n                <div class=\\\"qBuilderPages\\\">\\n                  <div class=\\\"customSelect ant-select ant-select-enabled\\\">\\n                    <select\\n                      [ngModel]=\\\"selectedPageObject.pageId\\\"\\n                      (change)=\\\"onPageChange($event.target.value)\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                    >\\n                      <option\\n                        [ngValue]=\\\"page.pageId\\\"\\n                        *ngFor=\\\"let page of pages.value\\\"\\n                      >\\n                        {{ page.name }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div style=\\\"position: relative\\\">\\n                    <div class=\\\"btn-group\\\">\\n                      <button\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-default dropdown-toggle\\\"\\n                        data-toggle=\\\"dropdown\\\"\\n                        aria-haspopup=\\\"true\\\"\\n                        aria-expanded=\\\"false\\\"\\n                      >\\n                        More actions\\n                      </button>\\n                      <div class=\\\"dropdown-menu\\\">\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Edit page title</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Delete page</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Reorder pages</a>\\n                        <div class=\\\"dropdown-divider\\\"></div>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Move questions</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Delete questions</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Insert Sub Form</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Embed Sub Form</a>\\n                      </div>\\n                    </div>\\n                    <button\\n                      (click)=\\\"onAddNewPage()\\\"\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-link\\\"\\n                    >\\n                      <span class=\\\"add-page\\\">+ <span>New Page</span> </span>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <app-page-builder-widget\\n                [pageControlFormGroup]=\\\"selectedPage\\\"\\n              ></app-page-builder-widget>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12 col-lg-4 col-xl-3\\\">\\n          <app-page-summery-control-widget></app-page-summery-control-widget>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYnVpbGRlci12Mi93aWRnZXRzL3F1ZXN0aW9uLXR5cGUtY29udHJvbHMvZmluZ2VycHJpbnQtY29udHJvbC13aWRnZXQvZmluZ2VycHJpbnQtY29udHJvbC13aWRnZXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"questionWidget\\\" *ngIf=\\\"!isCollapsed\\\">\\n  <div class=\\\"survey-content\\\">\\n    <div>\\n      <img [matMenuTriggerFor]=\\\"selectedQuestionMenu\\\"\\n        class=\\\"anticon anticon-ellipsis hidden-add hidden-add-padding ant-dropdown-trigger\\\"\\n        src=\\\"assets/icons/ellipsis.svg\\\" style=\\\"transform: rotate(90deg); cursor: pointer\\\" alt=\\\"ico\\\" />\\n    </div>\\n    <div>\\n      <div style=\\\"padding: 10px 20px; position: relative\\\">\\n        <div class=\\\"questionWidget__Open\\\">\\n          <div class=\\\"question-title resizeInput\\\">\\n            <div class=\\\"mb-1\\\">\\n              <div class=\\\"question-editor-label\\\">\\n                <span>Question</span>\\n              </div>\\n              <input class=\\\"text-input q-builder-text-bg number-input\\\" placeholder=\\\"Enter question\\\" type=\\\"text\\\"\\n                maxlength=\\\"\\\" [formControl]=\\\"questionControlFormGroup.controls['title']\\\" />\\n              <div class=\\\"input-counter\\\"></div>\\n            </div>\\n          </div>\\n          <div style=\\\"position: absolute; top: 8px; right: 40px; cursor: pointer\\\"\\n            (click)=\\\"onChangeCollapseState(false)\\\">\\n            <i class=\\\"material-icons orange600 md-24\\\">{{\\n              selectedQuetionType.icon2\\n            }}</i>\\n\\n            &nbsp;&nbsp;<span class=\\\"\\\" style=\\\"font-size: 14px\\\">{{\\n              selectedQuetionType.name\\n            }}</span>&nbsp;\\n            <img src=\\\"assets/icons/arrow-up.svg\\\" width=\\\"11.74px\\\" height=\\\"14px\\\" alt=\\\"ico\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"questionWidget__advDiv\\\">\\n          <div>\\n            <div class=\\\"check-box-widget\\\" style=\\\"display: inline-block; padding: 0px; margin-right: 10px\\\">\\n              <mat-checkbox [formControl]=\\\"\\n                  questionControlFormGroup.get('validation').get('required')\\n                \\\">This is required</mat-checkbox>\\n            </div>\\n          </div>\\n          <div>\\n            <span class=\\\"delete-question-widget-on-editor\\\" (click)=\\\"onRemoveQuesion()\\\"><span>Delete</span></span><span\\n              class=\\\"text-truncate\\\" style=\\\"font-size: 14px; cursor: pointer\\\"\\n              (click)=\\\"onOpenAdvanceOption()\\\"><span><span>Validations &amp; Skip Logics</span></span>&nbsp;\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"!isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_more</i>\\n              <i style=\\\"vertical-align: middle; border-style: none\\\" *ngIf=\\\"isAdvanceOptionOpened\\\"\\n                class=\\\"material-icons orange600\\\">expand_less</i>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <app-question-type-advance-widget [questionAdvanceControlFormGroup]=\\\"questionControlFormGroup\\\"\\n          *ngIf=\\\"isAdvanceOptionOpened\\\"></app-question-type-advance-widget>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<mat-menu #selectedQuestionMenu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModelMessengerService } from 'src/app/form-builder-v2/model-messenger.service';\n\n@Component({\n  selector: 'app-question-type-advance-widget',\n  templateUrl: './question-type-advance-widget.component.html',\n  styleUrls: ['./question-type-advance-widget.component.css'],\n})\nexport class QuestionTypeAdvanceWidgetComponent implements OnInit {\n  @Input() questionAdvanceControlFormGroup: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private messenger: ModelMessengerService\n  ) {}\n  ngOnInit(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { PageModel, StringHelpers } from 'src/app/form-builder-v2/models';\nimport {\n  QuestionType,\n  SelectedQuestionTypeModel,\n  QuestionBuilderMessengerModel,\n} from './../../models';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ModelMessengerService } from '../../model-messenger.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n\n\n@Component({\n  selector: 'app-page-control-widget',\n  templateUrl: './page-control-widget.component.html',\n  styleUrls: ['./page-control-widget.component.css'],\n})\nexport class PageControlWidgetComponent implements OnInit {\n  filterFields = [\n    {\n      key: 'common',\n      title: 'main fields',\n      group: [\n        {\n          key: 'createdAt',\n          title: 'Create Date',\n          type: 'date',\n        },\n      ],\n    },\n    {\n      key: 'individualPerson',\n      title: 'Physical Person',\n      group: [\n        {\n          key: 'firstname',\n          title: 'First Name',\n          type: 'text',\n        },\n        {\n          key: 'lastname',\n          title: 'Last Name',\n          type: 'text',\n        },\n        {\n          key: 'phone',\n          title: 'Phone Number',\n          type: 'text',\n        },\n        {\n          key: 'citizenshipCountry',\n          title: 'Country',\n          type: 'text',\n        },\n      ],\n    },\n    // {\n    //   key: 'legalPerson',\n    //   title: 'Legal Person',\n    //   group: [\n    //     {\n    //       key: 'brandname',\n    //       title: 'Brand Name',\n    //       type: 'text',\n    //     },\n    //     {\n    //       key: 'fullname',\n    //       title: 'Full Name',\n    //       type: 'text',\n    //     },\n    //     {\n    //       key: 'phone',\n    //       title: 'Phone',\n    //       type: 'text',\n    //     },\n    //     {\n    //       key: 'registrationCountry',\n    //       title: 'Country',\n    //       type: 'text',\n    //     },\n    //   ],\n    // },\n  ];\n\n  filterForm: FormGroup;\n  pages: FormArray;\n  selectedPage: FormGroup;\n  selectedPageObject: PageModel;\n\n  selectedQuestionType: SelectedQuestionTypeModel;\n\n  constructor(\n    private fb: FormBuilder,\n    private messenger: ModelMessengerService\n  ) {\n    this.pages = this.fb.array([]);\n  }\n\n  ngOnInit(): void {\n    // this.filterForm = this.generateFilterForm();\n\n    // TODO:: Load from json file\n\n    if (!this.pages.length) {\n      this.onAddNewPage();\n    }\n\n    this.messenger.questionBuilder.subscribe(\n      (model: QuestionBuilderMessengerModel) => {\n        if (model) {\n          this.onMessageReceiveFromQuestionWidget(model);\n        }\n      }\n    );\n  }\n  onMessageReceiveFromQuestionWidget(\n    model: QuestionBuilderMessengerModel\n  ): void {\n    if (model.action === StringHelpers.QUESTION_BUILDER_DELETE) {\n      this.onDeletePageQuestion(model.fromGroup, model.formGroupIndex);\n    }\n  }\n  onDeletePageQuestion(fromGroup: FormGroup, formGroupIndex: number): void {\n    // const questions = this.selectedPage.get('questions') as FormArray;\n\n    if (fromGroup.value.type) {\n      // TODO:: Prompt User before delete\n      console.log('// TODO:: Prompt User before delete');\n      this.commitPageQuestionDelete(formGroupIndex);\n    } else {\n      this.commitPageQuestionDelete(formGroupIndex);\n    }\n  }\n\n  private commitPageQuestionDelete(formGroupIndex: number): void {\n    (this.selectedPage.get('questions') as FormArray).removeAt(formGroupIndex);\n  }\n\n  // generateFilterForm(): FormGroup {\n  //   const baseForm = this.fb.group({});\n  //   this.filterFields.forEach((field) => {\n  //     baseForm.addControl(field.key, this.generateFormGroup(baseForm, field));\n  //   });\n\n  //   return baseForm;\n  // }\n\n  // generateFormGroup(baseForm: FormGroup, field): FormGroup {\n  //   if (field.group) {\n  //     const formGroup = this.fb.group({});\n  //     field.group.forEach((item) => {\n  //       formGroup.addControl(item.key, this.generateFormGroup(formGroup, item));\n  //     });\n  //     return formGroup;\n  //   } else {\n  //     baseForm.addControl(field.key, new FormControl(''));\n  //   }\n  //   return baseForm;\n  // }\n\n  getPages(): any[] {\n    return this.pages.controls.map((page) => ({\n      pageId: page.value.pageId,\n      name: page.value.name,\n    }));\n  }\n\n  onAddNewPage(): void {\n    const pageNumber = this.pages.length + 1;\n\n    const pageId = StringHelpers.GetPageId();\n    const newPage = this.fb.group({\n      pageId: [pageId],\n      name: [`Page - ${pageNumber}`, [Validators.required]],\n      description: '',\n      questions: this.fb.array([]),\n    });\n    this.pages.push(newPage);\n    this.selectedPage = newPage;\n    this.UpdateSelectedPageObject();\n  }\n\n  onPageChange(newPageId): void {\n    this.selectedPage = this.pages.controls.find(\n      (a) => a.value.pageId === this.selectedPageObject.pageId\n    ) as FormGroup;\n\n    this.UpdateSelectedPageObject();\n  }\n\n  private UpdateSelectedPageObject(): void {\n    this.selectedPageObject = this.selectedPage.value;\n  }\n\n  onAddQuestionToPage(): void {\n    const selectedPageQustions = this.selectedPage.get(\n      'questions'\n    ) as FormArray;\n\n    const questionNumber = selectedPageQustions.controls.length + 1;\n\n    const questionId = StringHelpers.GetQuestionId();\n    const newQuestion = this.fb.group({\n      questionId: [questionId],\n      type: ['', [Validators.required]],\n      hint: ['something', [Validators.required]],\n      index: [questionNumber, [Validators.required]],\n      title: ['', [Validators.required]],\n      options: this.fb.array([]),\n      keyword_label: [''],\n      keyword_value: [''],\n      countryCode: 'GH',\n      useAsSummary: false,\n\n      validation: this.fb.group({\n        required: [false, [Validators.required]],\n        regex: '',\n        regexTest: '',\n        max: '',\n        min: '', // depend on type\n        verify: '', // Use for phone numbers\n      }),\n      dependencies: this.fb.group({\n        logic: '',\n        action: '',\n        rules: this.fb.array([]),\n      }),\n      validationRules: this.fb.array([]),\n    });\n\n    selectedPageQustions.push(newQuestion);\n\n    this.selectedQuestionType = { type: '', title: '' };\n    this.messenger.onActiveQuestionTypeChanged(questionId);\n  }\n\n  getSelectedPageQuestions(): FormArray {\n    const selectedPageQustions = this.selectedPage.get(\n      'questions'\n    ) as FormArray;\n    return selectedPageQustions;\n  }\n\n  getQuestionTypeObject(type): QuestionType {\n    return StringHelpers.GetQuestionType(type);\n  }\n\n  showSelectedQuestionViewer(question: FormGroup): boolean {\n    return false;\n  }\n\n  drop(event: CdkDragDrop<FormGroup[]>) {\n    moveItemInArray(\n      this.pages.controls,\n      event.previousIndex,\n      event.currentIndex\n    );\n  }\n}\n","import { FormArray, FormGroup } from '@angular/forms';\r\nexport interface QuestionType {\r\n  typeId: string;\r\n  name: string;\r\n  icon: string;\r\n  icon2: string;\r\n}\r\nexport interface PageModel {\r\n  pageId: string;\r\n  title: string;\r\n}\r\nexport interface SvgModel {\r\n  name: string;\r\n  source: string;\r\n}\r\nexport interface SelectedQuestionTypeModel {\r\n  type: string;\r\n  title: string;\r\n  // icon: string;\r\n}\r\n\r\nexport interface QuestionBuilderMessengerModel {\r\n  action: string;\r\n  fromGroup: FormGroup;\r\n  formGroupIndex: number;\r\n}\r\n\r\nexport class StringHelpers {\r\n  public static QUESTION_BUILDER_DELETE = 'delete-question';\r\n  public static DEFAULT_QUESTION_TYPE: QuestionType = {\r\n    icon: '',\r\n    icon2: 'contact_support',\r\n    name: '',\r\n    typeId: '',\r\n  };\r\n\r\n  public static REGISTERED_SVGS: SvgModel[] = [\r\n    { name: 'number', source: '/src/assets/icons/123.svg' },\r\n  ];\r\n  public static QustionTypes: QuestionType[] = [\r\n    {\r\n      typeId: 'intro',\r\n      name: 'Introductory Text',\r\n      icon: 'https://insyt.esoko.com/static/media/text-logo.b4c24c4a.svg',\r\n      icon2: 'title',\r\n    },\r\n    {\r\n      typeId: 'text',\r\n      name: 'Text',\r\n      icon: 'https://insyt.esoko.com/static/media/text-logo.b4c24c4a.svg',\r\n      icon2: 'text_fields',\r\n    },\r\n    {\r\n      typeId: 'number',\r\n      name: 'Number',\r\n      icon: 'https://insyt.esoko.com/static/media/123.5f8d08ad.svg',\r\n      icon2: 'looks_5',\r\n    },\r\n    {\r\n      typeId: 'date',\r\n      name: 'Date',\r\n      icon: 'https://insyt.esoko.com/static/media/calendar.c8ed935a.svg',\r\n      icon2: 'date_range',\r\n    },\r\n    {\r\n      typeId: 'email',\r\n      name: 'Email address',\r\n      icon: 'https://insyt.esoko.com/static/media/mail.214421aa.svg',\r\n      icon2: 'email',\r\n    },\r\n    {\r\n      typeId: 'phone-number',\r\n      name: 'Phone number',\r\n      icon: 'https://insyt.esoko.com/static/media/phone.e8507f5b.svg',\r\n      icon2: 'phone',\r\n    },\r\n    {\r\n      typeId: 'multi-select',\r\n      name: 'Multiple Choice',\r\n      icon: 'https://insyt.esoko.com/static/media/checkbox.9e38d26f.svg',\r\n      icon2: 'check_box',\r\n    },\r\n    {\r\n      typeId: 'image',\r\n      name: 'Image',\r\n      icon: 'https://insyt.esoko.com/static/media/image-q-icon.7d0f1dfc.svg',\r\n      icon2: 'add_a_photo',\r\n    },\r\n    {\r\n      typeId: 'video',\r\n      name: 'Video',\r\n      icon: 'https://insyt.esoko.com/static/media/video.68498d29.svg',\r\n      icon2: 'video_library',\r\n    },\r\n    {\r\n      typeId: 'audio',\r\n      name: 'Audio',\r\n      icon: 'https://insyt.esoko.com/static/media/audio.f751184d.svg',\r\n      icon2: 'volume_up',\r\n    },\r\n    {\r\n      typeId: 'gis',\r\n      name: 'G.P.S. Coordinate',\r\n      icon: 'https://insyt.esoko.com/static/media/map-marker.ede54679.svg',\r\n      icon2: 'add_location_alt',\r\n    },\r\n    {\r\n      typeId: 'gis-polygon',\r\n      name: 'G.I.S. Polygon',\r\n      icon: 'https://insyt.esoko.com/static/media/polygon.a8c1ba28.svg',\r\n      icon2: '360',\r\n    },\r\n\r\n    {\r\n      typeId: 'signature',\r\n      name: 'Signature',\r\n      icon: 'https://insyt.esoko.com/static/media/signature.f52e7cba.svg',\r\n      icon2: 'gesture',\r\n    },\r\n    {\r\n      typeId: 'fingerprint',\r\n      name: 'Fingerprint',\r\n      icon: 'https://insyt.esoko.com/static/media/signature.f52e7cba.svg',\r\n      icon2: 'fingerprint',\r\n    },\r\n    {\r\n      typeId: 'option-tree',\r\n      name: 'Tree',\r\n      icon: 'https://insyt.esoko.com/static/media/multi-level.24cc5057.svg',\r\n      icon2: 'account_tree',\r\n    },\r\n    {\r\n      typeId: 'function',\r\n      name: 'Calculation',\r\n      icon: 'https://insyt.esoko.com/static/media/function.759ecf7b.svg',\r\n      icon2: 'functions',\r\n    },\r\n\r\n    {\r\n      typeId: 'qrcode',\r\n      name: 'QR Code',\r\n      icon: 'https://insyt.esoko.com/static/media/qrcode.c438be4d.svg',\r\n      icon2: 'qr_code_scanner',\r\n    },\r\n    {\r\n      typeId: 'bar-code',\r\n      name: 'Bar Code',\r\n      icon: '',\r\n      icon2: 'graphic_eq',\r\n    },\r\n  ];\r\n  public static getSelectedPageQuestions(pageFormGroup: FormGroup): FormArray {\r\n    const selectedPageQustions = pageFormGroup.get('questions') as FormArray;\r\n    return selectedPageQustions;\r\n  }\r\n  public static GetQuestionType(typeId: string): QuestionType {\r\n    return (\r\n      this.QustionTypes.find((x) => x.typeId === typeId) ??\r\n      this.DEFAULT_QUESTION_TYPE\r\n    );\r\n  }\r\n\r\n  private static getGUID(): string {\r\n    return `${this.s4() + this.s4()}-${this.s4()}-${this.s4()}-${this.s4()}-${\r\n      this.s4() + this.s4() + this.s4()\r\n    }`;\r\n  }\r\n\r\n  private static s4(): string {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n\r\n  public static GetPageId(): string {\r\n    return `page_${this.getGUID()}`;\r\n  }\r\n  public static GetQuestionId(): string {\r\n    return `question_${this.getGUID()}`;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}